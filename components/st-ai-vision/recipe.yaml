---
# IMPORTANT:
# This recipe cannot be used as-is to be uploaded to /IOTCONNECT. Use build.sh to generate
# the recipe that has proper CPID and Environment
RecipeFormatVersion: "2020-01-25"
ComponentName: "{{COMPONENT_NAME}}"
ComponentVersion: "{{COMPONENT_VERSION}}"
ComponentDescription: "/IOTCONNECT ST Ai Vision"
ComponentPublisher: "{{COMPONENT_AUTHOR}}"
ComponentConfiguration:
  DefaultConfiguration:
    accessControl:
      aws.greengrass.ipc.mqttproxy:
        io.iotconnect.example.IotConnectStAiVision:mqttproxy:1:
          policyDescription: "IotConnectStAiVision direct access to /IOTCONNECT IoTCore"
          operations:
          - "aws.greengrass#SubscribeToIoTCore"
          - "aws.greengrass#PublishToIoTCore"
          resources:
          - "*"
      # not using PIC topics for now, but the user can choose to do this for future-proofing:
      aws.greengrass.ipc.pubsub:
        io.iotconnect.example.IotConnectStAiVision:pubsub:1:
          policyDescription: "IotConnectStAiVision access to local IPC topics"
          operations:
            - "aws.greengrass#PublishToTopic"
            - "aws.greengrass#SubscribeToTopic"
          resources:
            - "*"
Manifests:
  - Platform:
      os: linux
      runtime: "*"
    Artifacts:
      # Edit the line below with package s3 URL when uploading the component
      # See instructions for registering Components in IoTConnect in the main README.md
      - Uri: "s3://{{BUCKET_NAME}}/{{COMPONENT_NAME}}/{{VERSION}}/st-ai-vision.zip"
        Unarchive: ZIP
    Lifecycle:
      # the wildcard is there to deal with the initial backend version
      # that enforces a globally unique name (zip may be renamed to include a version)
      install:
        RequiresPrivilege: true
        Timeout: 600
        Script: |
          bash -x {artifacts:decompressedPath}/st-ai-vision*/wrapper/system-setup.sh
          sudo -i -u weston env \
            AWS_IOT_THING_NAME="$AWS_IOT_THING_NAME" \
            AWS_REGION="$AWS_REGION" \
            AWS_DEFAULT_REGION="$AWS_DEFAULT_REGION" \
            GGC_VERSION="$GGC_VERSION" \
            GG_ROOT_CA_PATH="$GG_ROOT_CA_PATH" \
            AWS_GG_NUCLEUS_DOMAIN_SOCKET_FILEPATH_FOR_COMPONENT="$AWS_GG_NUCLEUS_DOMAIN_SOCKET_FILEPATH_FOR_COMPONENT" \
            SVCUID="$SVCUID" \
            AWS_CONTAINER_AUTHORIZATION_TOKEN="$AWS_CONTAINER_AUTHORIZATION_TOKEN" \
            AWS_CONTAINER_CREDENTIALS_FULL_URI="$AWS_CONTAINER_CREDENTIALS_FULL_URI" \
            bash -x {artifacts:decompressedPath}/st-ai-vision*/wrapper/component-install.sh

      run:
        RequiresPrivilege: true
        Script: |
          sudo -i -u weston env \
            AWS_IOT_THING_NAME="$AWS_IOT_THING_NAME" \
            AWS_REGION="$AWS_REGION" \
            AWS_DEFAULT_REGION="$AWS_DEFAULT_REGION" \
            GGC_VERSION="$GGC_VERSION" \
            GG_ROOT_CA_PATH="$GG_ROOT_CA_PATH" \
            AWS_GG_NUCLEUS_DOMAIN_SOCKET_FILEPATH_FOR_COMPONENT="$AWS_GG_NUCLEUS_DOMAIN_SOCKET_FILEPATH_FOR_COMPONENT" \
            SVCUID="$SVCUID" \
            AWS_CONTAINER_AUTHORIZATION_TOKEN="$AWS_CONTAINER_AUTHORIZATION_TOKEN" \
            AWS_CONTAINER_CREDENTIALS_FULL_URI="$AWS_CONTAINER_CREDENTIALS_FULL_URI" \
            bash -x {artifacts:decompressedPath}/st-ai-vision*/wrapper/component-run.sh
